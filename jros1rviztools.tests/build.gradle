plugins {
  id 'com.diffplug.spotless'
}

eclipse.classpath.file {
  // instruct eclipse plugin to put everything to module path
  whenMerged {
    entries.findAll { it.kind == 'lib' }.each { it.entryAttributes['module'] = 'true' }
  }
}

dependencies {
  testImplementation project(":${zzName}")
  zzTestDependencies.split(',').findAll{ !it.isBlank() }.each { testImplementation it }

  def junitVersion = "5.8.1"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
  testRuntimeOnly "org.junit.platform:junit-platform-commons:1.7.0"
}

java {
    // disable Gradle modularity support since it is not working properly
    // for non modules like xmlrpc and setup module path manually later:
    // https://github.com/gradle/gradle/issues/17609
    // https://github.com/gradle/gradle/issues/12630
    modularity.inferModulePath = false
}

compileTestJava {
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath
        ]
        classpath = files()
    }
}

test {
  useJUnitPlatform()

  testLogging {
    events "started", "failed"
  }
}

// run spotless and format code before the build
classes.dependsOn spotlessApply
